{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\dg-react-test\\\\src\\\\pages\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GridItem from \"../components/GridItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieList(props) {\n  _s();\n\n  useEffect(() => {\n    /**\r\n     *  @description - Fetches the page data list.\r\n     *\r\n     *  @returns {null} - Returns null.\r\n     */\n    (async () => {\n      if (hasMore) {\n        var _data$page;\n\n        const response = await fetch(API.DATASRC + `/page${pageNum}.json`);\n        const data = await response.json();\n        dispatch(updateHeader({\n          title: (data === null || data === void 0 ? void 0 : (_data$page = data.page) === null || _data$page === void 0 ? void 0 : _data$page.title) || \"\"\n        }));\n        dispatch(updateImagesData(data));\n      }\n    })();\n  }, [pageNum]);\n  return /*#__PURE__*/_jsxDEV(GridItem, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n\n_s(MovieList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MovieList;\nMovieList.propTypes = {};\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Projects/dg-react-test/src/pages/MovieList.js"],"names":["React","PropTypes","GridItem","MovieList","props","useEffect","hasMore","response","fetch","API","DATASRC","pageNum","data","json","dispatch","updateHeader","title","page","updateImagesData","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxBC,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACA;AACA;AACI,KAAC,YAAY;AACX,UAAIC,OAAJ,EAAa;AAAA;;AACX,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACC,OAAJ,GAAe,QAAOC,OAAQ,OAA/B,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AAEAC,QAAAA,QAAQ,CAACC,YAAY,CAAC;AAAEC,UAAAA,KAAK,EAAE,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,0BAAAA,IAAI,CAAEK,IAAN,0DAAYD,KAAZ,KAAqB;AAA9B,SAAD,CAAb,CAAR;AACAF,QAAAA,QAAQ,CAACI,gBAAgB,CAACN,IAAD,CAAjB,CAAR;AACD;AACF,KARD;AASD,GAfQ,EAeN,CAACD,OAAD,CAfM,CAAT;AAgBA,sBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlBQR,S;;KAAAA,S;AAoBTA,SAAS,CAACgB,SAAV,GAAsB,EAAtB;AAEA,eAAehB,SAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GridItem from \"../components/GridItem\";\r\n\r\nfunction MovieList(props) {\r\n  useEffect(() => {\r\n    /**\r\n     *  @description - Fetches the page data list.\r\n     *\r\n     *  @returns {null} - Returns null.\r\n     */\r\n    (async () => {\r\n      if (hasMore) {\r\n        const response = await fetch(API.DATASRC + `/page${pageNum}.json`);\r\n        const data = await response.json();\r\n\r\n        dispatch(updateHeader({ title: data?.page?.title || \"\" }));\r\n        dispatch(updateImagesData(data));\r\n      }\r\n    })();\r\n  }, [pageNum]);\r\n  return <GridItem />;\r\n}\r\n\r\nMovieList.propTypes = {};\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}
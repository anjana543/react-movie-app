{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\dg-react-test\\\\src\\\\components\\\\GridItem\\\\index.jsx\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n/**\r\n * @description - GridItem Component.\r\n * @returns {Node} - GridItem View Component\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GridItem(_ref) {\n  let {\n    item\n  } = _ref;\n  console.log(\"item+++\", item);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-w-full flex flex-col justify-start items-start pb-10 overflow-hidden\",\n    title: item.name,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/assets/${item[\"poster-image\"]}`,\n      alt: item.name,\n      className: \"flex-none w-full h-full pb-2\",\n      loading: \"lazy\",\n      onError: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        currentTarget.onerror = null;\n        currentTarget.src = \"/assets/placeholder_for_missing_posters.png\";\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-none w-full text-left text-gray-400 whitespace-nowrap overflow-hidden overflow-ellipsis\",\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GridItem;\nGridItem.defaultProps = {\n  item: {}\n};\nGridItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string,\n    \"poster-image\": PropTypes.string\n  })\n};\nexport default GridItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridItem\");","map":{"version":3,"sources":["C:/Projects/dg-react-test/src/components/GridItem/index.jsx"],"names":["React","useState","PropTypes","GridItem","item","console","log","name","currentTarget","onerror","src","defaultProps","propTypes","shape","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,QAAT,OAA4B;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,sBACE;AACE,IAAA,SAAS,EAAC,0EADZ;AAEE,IAAA,KAAK,EAAEA,IAAI,CAACG,IAFd;AAAA,4BAIE;AACE,MAAA,GAAG,EAAG,WAAUH,IAAI,CAAC,cAAD,CAAiB,EADvC;AAEE,MAAA,GAAG,EAAEA,IAAI,CAACG,IAFZ;AAGE,MAAA,SAAS,EAAC,8BAHZ;AAIE,MAAA,OAAO,EAAC,MAJV;AAKE,MAAA,OAAO,EAAE,SAAuB;AAAA,YAAtB;AAAEC,UAAAA;AAAF,SAAsB;AAC9BA,QAAAA,aAAa,CAACC,OAAd,GAAwB,IAAxB;AACAD,QAAAA,aAAa,CAACE,GAAd,GAAoB,6CAApB;AACD;AARH;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE;AAAK,MAAA,SAAS,EAAC,8FAAf;AAAA,gBACGN,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KAtBQJ,Q;AAwBTA,QAAQ,CAACQ,YAAT,GAAwB;AACtBP,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAIAD,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,IAAI,EAAEF,SAAS,CAACW,KAAV,CAAgB;AACpBN,IAAAA,IAAI,EAAEL,SAAS,CAACY,MADI;AAEpB,oBAAgBZ,SAAS,CAACY;AAFN,GAAhB;AADa,CAArB;AAOA,eAAeX,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * @description - GridItem Component.\r\n * @returns {Node} - GridItem View Component\r\n */\r\nfunction GridItem({ item }) {\r\n  console.log(\"item+++\", item);\r\n  return (\r\n    <div\r\n      className=\"min-w-full flex flex-col justify-start items-start pb-10 overflow-hidden\"\r\n      title={item.name}\r\n    >\r\n      <img\r\n        src={`/assets/${item[\"poster-image\"]}`}\r\n        alt={item.name}\r\n        className=\"flex-none w-full h-full pb-2\"\r\n        loading=\"lazy\"\r\n        onError={({ currentTarget }) => {\r\n          currentTarget.onerror = null;\r\n          currentTarget.src = \"/assets/placeholder_for_missing_posters.png\";\r\n        }}\r\n      />\r\n      <div className=\"flex-none w-full text-left text-gray-400 whitespace-nowrap overflow-hidden overflow-ellipsis\">\r\n        {item.name}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGridItem.defaultProps = {\r\n  item: {},\r\n};\r\n\r\nGridItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    \"poster-image\": PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default GridItem;\r\n"]},"metadata":{},"sourceType":"module"}
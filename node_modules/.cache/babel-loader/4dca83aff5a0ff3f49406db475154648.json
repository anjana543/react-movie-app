{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\dg-react-test\\\\src\\\\pages\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GridItem from \"../components/GridItem\";\nimport useFetch from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieList(props) {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useFetch(\"https://test.create.diagnal.com/data/page1.json\");\n  console.log(\"response++++\", data);\n  useEffect(() => {\n    if (data !== null && data !== void 0 && data[\"content-items\"]) {\n      var _imagesData, _imagesData$page$cont, _imagesData2;\n\n      const curList = ((_imagesData = imagesData) === null || _imagesData === void 0 ? void 0 : (_imagesData$page$cont = _imagesData.page[\"content-items\"]) === null || _imagesData$page$cont === void 0 ? void 0 : _imagesData$page$cont.content) || [];\n      const updatedList = [...imgList, ...curList];\n      const allLoaded = parseInt((_imagesData2 = imagesData) === null || _imagesData2 === void 0 ? void 0 : _imagesData2.page[\"total-content-items\"], 10) === updatedList.length;\n      if (allLoaded) setHasMore(false);\n      setMasterList(updatedList);\n      setImgList(updatedList);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full p-4 grid gap-4 grid-cols-3 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 xl:grid-cols-10 2xl:grid-cols-12\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieList, \"B8Qa+QmwFBLFISyXLV4aeyHQF10=\", false, function () {\n  return [useFetch];\n});\n\n_c = MovieList;\nMovieList.propTypes = {};\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Projects/dg-react-test/src/pages/MovieList.js"],"names":["useState","useEffect","PropTypes","GridItem","useFetch","MovieList","props","page","setPage","data","loading","error","refetch","console","log","curList","imagesData","content","updatedList","imgList","allLoaded","parseInt","length","setHasMore","setMasterList","setImgList","propTypes"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAoCR,QAAQ,CAChD,iDADgD,CAAlD;AAIAS,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,IAA5B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAG,eAAH,CAAR,EAA6B;AAAA;;AAC3B,YAAMM,OAAO,GAAG,gBAAAC,UAAU,UAAV,2EAAYT,IAAZ,CAAiB,eAAjB,iFAAmCU,OAAnC,KAA8C,EAA9D;AACA,YAAMC,WAAW,GAAG,CAAC,GAAGC,OAAJ,EAAa,GAAGJ,OAAhB,CAApB;AACA,YAAMK,SAAS,GACbC,QAAQ,iBAACL,UAAD,iDAAC,aAAYT,IAAZ,CAAiB,qBAAjB,CAAD,EAA0C,EAA1C,CAAR,KACAW,WAAW,CAACI,MAFd;AAGA,UAAIF,SAAJ,EAAeG,UAAU,CAAC,KAAD,CAAV;AACfC,MAAAA,aAAa,CAACN,WAAD,CAAb;AACAO,MAAAA,UAAU,CAACP,WAAD,CAAV;AACD;AACF,GAXQ,EAWN,CAACT,IAAD,CAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAjCQJ,S;UAEmCD,Q;;;KAFnCC,S;AAmCTA,SAAS,CAACqB,SAAV,GAAsB,EAAtB;AAEA,eAAerB,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GridItem from \"../components/GridItem\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nfunction MovieList(props) {\r\n  const [page, setPage] = useState(1);\r\n  const { data, loading, error, refetch } = useFetch(\r\n    \"https://test.create.diagnal.com/data/page1.json\"\r\n  );\r\n\r\n  console.log(\"response++++\", data);\r\n\r\n  useEffect(() => {\r\n    if (data?.[\"content-items\"]) {\r\n      const curList = imagesData?.page[\"content-items\"]?.content || [];\r\n      const updatedList = [...imgList, ...curList];\r\n      const allLoaded =\r\n        parseInt(imagesData?.page[\"total-content-items\"], 10) ===\r\n        updatedList.length;\r\n      if (allLoaded) setHasMore(false);\r\n      setMasterList(updatedList);\r\n      setImgList(updatedList);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"w-full p-4 grid gap-4 grid-cols-3 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 xl:grid-cols-10 2xl:grid-cols-12\">\r\n      {/* {imgList.map((imgObj, index) => {\r\n        return (\r\n          <GridItem\r\n            key={`${imgObj.name.replace(\" \", \"\")}_${index}`}\r\n            item={imgObj}\r\n          />\r\n        );\r\n      })} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nMovieList.propTypes = {};\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}
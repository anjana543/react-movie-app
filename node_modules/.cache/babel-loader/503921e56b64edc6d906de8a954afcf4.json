{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\dg-react-test\\\\src\\\\layout\\\\Header\\\\index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Icon from \"../../components/Icon\";\nimport TextField from \"../../components/TextField\";\nimport { debounce } from \"../../utils\";\nimport { updateSearch } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useVerticalScrollDirection() {\n  _s();\n\n  const [direction, setDirection] = useState(\"up\");\n  let prevScrollY = 0;\n  useEffect(() => {\n    // Using lodash, we set a throttle to the scroll event\n    // making it not fire more than once every 500 ms.\n    window.onscroll = throttle(() => {\n      // This value keeps the latest scrollY position\n      const {\n        scrollY\n      } = window; // Checks if previous scrollY is less than latest scrollY\n      // If true, we are scrolling downwards, else scrollig upwards\n\n      const direction = prevScrollY < scrollY ? \"down\" : \"up\"; // Updates the previous scroll variable AFTER the direction is set.\n      // The order of events is key to making this work, as assigning\n      // the previous scroll before checking the direction will result\n      // in the direction always being 'up'.\n\n      prevScrollY = scrollY; // Set the state to trigger re-rendering\n\n      setDirection(direction);\n    }, 500);\n    return () => {\n      // Remove scroll event on unmount\n      window.onscroll = null;\n    };\n  }, []);\n  return direction;\n}\n/**\r\n * @description - Header Component.\r\n * @returns {Node} - Header View Component\r\n */\n\n\n_s(useVerticalScrollDirection, \"TOUHZAdHPIzh3aORlLQZ52AL3W0=\");\n\nfunction Header() {\n  _s2();\n\n  const dispatch = useDispatch();\n  const [showSearchField, setSearchFieldStatus] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const headerData = useSelector(state => state.headerData);\n  const verticalScrollDirection = useVerticalScrollDirection();\n\n  const setData = value => {\n    dispatch(updateSearch(value));\n  };\n\n  const debouncedSave = useCallback(debounce(nextValue => setData(nextValue), 300), []);\n\n  const handleInputChange = e => {\n    setSearchTerm(e.target.value);\n    debouncedSave(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"isScrolling++++\", verticalScrollDirection);\n  }, [verticalScrollDirection]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row sticky top-0 z-10 justify-center items-center space-x-4 p-4 bg-gradient-to-b from-black via-black w-full h-header-height\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-initial flex-shrink-0\",\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        src: \"Back.png\",\n        alt: \"back icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-auto flex-shrink-0 text-left text-white whitespace-nowrap align-middle text-lg font-semibold\",\n      children: headerData === null || headerData === void 0 ? void 0 : headerData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row flex-initial justify-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${showSearchField ? \"hidden\" : \"\"} flex flex-row flex-initial justify-end items-end space-x-2`,\n        onClick: () => setSearchFieldStatus(!showSearchField),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          src: \"search.png\",\n          alt: \"search icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${!showSearchField ? \"hidden\" : \"\"} flex flex-initial justify-end items-end`,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          handleChange: handleInputChange,\n          val: searchTerm,\n          className: \"w-11/12 rounded-md p-1 px-1.5 transition duration-1000 ease-in transform scale-100 bg-black border-b rounded-none text-white hover:outline-0\",\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Header, \"d0Qt4ecFU5fD9zUG5mvPAKQQYzU=\", false, function () {\n  return [useDispatch, useSelector, useVerticalScrollDirection];\n});\n\n_c = Header;\nHeader.propTypes = {};\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Projects/dg-react-test/src/layout/Header/index.jsx"],"names":["React","useState","useCallback","useEffect","PropTypes","useSelector","useDispatch","Icon","TextField","debounce","updateSearch","useVerticalScrollDirection","direction","setDirection","prevScrollY","window","onscroll","throttle","scrollY","Header","dispatch","showSearchField","setSearchFieldStatus","searchTerm","setSearchTerm","headerData","state","verticalScrollDirection","setData","value","debouncedSave","nextValue","handleInputChange","e","target","console","log","title","propTypes"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Icon from \"../../components/Icon\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { debounce } from \"../../utils\";\r\nimport { updateSearch } from \"../../store/actions\";\r\n\r\nfunction useVerticalScrollDirection() {\r\n  const [direction, setDirection] = useState(\"up\");\r\n\r\n  let prevScrollY = 0;\r\n\r\n  useEffect(() => {\r\n    // Using lodash, we set a throttle to the scroll event\r\n    // making it not fire more than once every 500 ms.\r\n    window.onscroll = throttle(() => {\r\n      // This value keeps the latest scrollY position\r\n      const { scrollY } = window;\r\n\r\n      // Checks if previous scrollY is less than latest scrollY\r\n      // If true, we are scrolling downwards, else scrollig upwards\r\n      const direction = prevScrollY < scrollY ? \"down\" : \"up\";\r\n\r\n      // Updates the previous scroll variable AFTER the direction is set.\r\n      // The order of events is key to making this work, as assigning\r\n      // the previous scroll before checking the direction will result\r\n      // in the direction always being 'up'.\r\n      prevScrollY = scrollY;\r\n\r\n      // Set the state to trigger re-rendering\r\n      setDirection(direction);\r\n    }, 500);\r\n\r\n    return () => {\r\n      // Remove scroll event on unmount\r\n      window.onscroll = null;\r\n    };\r\n  }, []);\r\n\r\n  return direction;\r\n}\r\n\r\n/**\r\n * @description - Header Component.\r\n * @returns {Node} - Header View Component\r\n */\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n  const [showSearchField, setSearchFieldStatus] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const headerData = useSelector((state) => state.headerData);\r\n\r\n  const verticalScrollDirection = useVerticalScrollDirection();\r\n\r\n  const setData = (value) => {\r\n    dispatch(updateSearch(value));\r\n  };\r\n\r\n  const debouncedSave = useCallback(\r\n    debounce((nextValue) => setData(nextValue), 300),\r\n    []\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    debouncedSave(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"isScrolling++++\", verticalScrollDirection);\r\n  }, [verticalScrollDirection]);\r\n\r\n  return (\r\n    <div className=\"flex flex-row sticky top-0 z-10 justify-center items-center space-x-4 p-4 bg-gradient-to-b from-black via-black w-full h-header-height\">\r\n      <div className=\"flex-initial flex-shrink-0\">\r\n        <Icon src=\"Back.png\" alt=\"back icon\" />\r\n      </div>\r\n      <div className=\"flex-auto flex-shrink-0 text-left text-white whitespace-nowrap align-middle text-lg font-semibold\">\r\n        {headerData?.title}\r\n      </div>\r\n      <div className=\"flex flex-row flex-initial justify-end\">\r\n        <div\r\n          className={`${\r\n            showSearchField ? \"hidden\" : \"\"\r\n          } flex flex-row flex-initial justify-end items-end space-x-2`}\r\n          onClick={() => setSearchFieldStatus(!showSearchField)}\r\n        >\r\n          <Icon src=\"search.png\" alt=\"search icon\" />\r\n        </div>\r\n        <div\r\n          className={`${\r\n            !showSearchField ? \"hidden\" : \"\"\r\n          } flex flex-initial justify-end items-end`}\r\n        >\r\n          <TextField\r\n            handleChange={handleInputChange}\r\n            val={searchTerm}\r\n            className=\"w-11/12 rounded-md p-1 px-1.5 transition duration-1000 ease-in transform scale-100 bg-black border-b rounded-none text-white hover:outline-0\"\r\n            placeholder=\"Search\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}
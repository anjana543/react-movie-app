{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\dg-react-test\\\\src\\\\pages\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport GridItem from \"../components/GridItem\";\nimport useFetch from \"../hooks/useFetch\";\nimport { updateHeader, updateMovieData } from \"../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { API } from \"../utils/constant\";\nimport Loader from \"../components/Loader\";\nimport ErrorBlock from \"../components/ErrorBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MovieList(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [movieData, setMovieData] = useState([]);\n  const fullData = useSelector(state => state.data);\n  console.log(\"fullData+++\", fullData);\n  const {\n    data,\n    hasMore,\n    loading,\n    error\n  } = useFetch(API.PAGE, pageNumber);\n  useEffect(() => {\n    if (data) {\n      var _data$contentItems, _data$page;\n\n      const pageItems = (data === null || data === void 0 ? void 0 : (_data$contentItems = data[\"content-items\"]) === null || _data$contentItems === void 0 ? void 0 : _data$contentItems.content) || [];\n      dispatch(updateHeader({\n        title: (data === null || data === void 0 ? void 0 : (_data$page = data.page) === null || _data$page === void 0 ? void 0 : _data$page.title) || \"\"\n      }));\n      dispatch(updateMovieData(pageItems));\n    }\n  }, [data]);\n  const observer = useRef();\n  const lastBookElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        console.log(\"visible+++\");\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full p-4 grid gap-4 grid-cols-3 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 xl:grid-cols-10 2xl:grid-cols-12\",\n      children: [movieData.map((item, index) => {\n        const key = `${item.name.replaceAll(\" \", \"-\").toLowerCase()}-${index}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", { ...(movieData.length === index + 1 && {\n            ref: lastBookElementRef\n          }),\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      }), loading && /*#__PURE__*/_jsxDEV(Loader, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorBlock, {\n      title: \"Error!\",\n      subTitle: \"Something went wrong.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MovieList, \"1uNDSiN5hS0HUohrU+cK3cAzo+k=\", false, function () {\n  return [useDispatch, useSelector, useFetch];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Projects/dg-react-test/src/pages/MovieList.js"],"names":["React","useState","useEffect","useRef","useCallback","GridItem","useFetch","updateHeader","updateMovieData","useDispatch","useSelector","API","Loader","ErrorBlock","MovieList","props","dispatch","pageNumber","setPageNumber","movieData","setMovieData","fullData","state","data","console","log","hasMore","loading","error","PAGE","pageItems","content","title","page","observer","lastBookElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","map","item","index","key","name","replaceAll","toLowerCase","length","ref"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport GridItem from \"../components/GridItem\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { updateHeader, updateMovieData } from \"../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { API } from \"../utils/constant\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrorBlock from \"../components/ErrorBlock\";\r\n\r\nfunction MovieList(props) {\r\n  const dispatch = useDispatch();\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [movieData, setMovieData] = useState([]);\r\n  const fullData = useSelector((state) => state.data);\r\n\r\n  console.log(\"fullData+++\", fullData);\r\n\r\n  const { data, hasMore, loading, error } = useFetch(API.PAGE, pageNumber);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const pageItems = data?.[\"content-items\"]?.content || [];\r\n      dispatch(updateHeader({ title: data?.page?.title || \"\" }));\r\n      dispatch(updateMovieData(pageItems));\r\n    }\r\n  }, [data]);\r\n\r\n  const observer = useRef();\r\n  const lastBookElementRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          console.log(\"visible+++\");\r\n          setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full p-4 grid gap-4 grid-cols-3 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 xl:grid-cols-10 2xl:grid-cols-12\">\r\n        {movieData.map((item, index) => {\r\n          const key = `${item.name\r\n            .replaceAll(\" \", \"-\")\r\n            .toLowerCase()}-${index}`;\r\n          return (\r\n            <div\r\n              key={key}\r\n              {...(movieData.length === index + 1 && {\r\n                ref: lastBookElementRef,\r\n              })}\r\n            >\r\n              <GridItem item={item} />\r\n            </div>\r\n          );\r\n        })}\r\n        {loading && <Loader color=\"white\" />}\r\n      </div>\r\n      {error && <ErrorBlock title=\"Error!\" subTitle=\"Something went wrong.\" />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../utils/constant\";\nexport default function useFetch(path, pageNumber) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const url = path === null || path === void 0 ? void 0 : path[pageNumber];\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios.get(url, {\n      headers: {\n        \"secret-key\": API.SECRET_KEY\n      },\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      var _res$data;\n\n      setData((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.page);\n      setHasMore(res.data.page[\"page-size-requested\"] === res.data.page[\"page-size-returned\"]);\n      setLoading(false);\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      setLoading(false);\n      setError(true);\n    });\n    return () => cancel();\n  }, [path, pageNumber]);\n  return {\n    loading,\n    error,\n    data,\n    hasMore\n  };\n}\n\n_s(useFetch, \"nj7ayNh9j5wpHI1daP3exK3poo4=\");","map":{"version":3,"sources":["C:/Projects/dg-react-test/src/hooks/useFetch.jsx"],"names":["useEffect","useState","axios","API","useFetch","path","pageNumber","loading","setLoading","error","setError","data","setData","hasMore","setHasMore","url","cancel","get","headers","SECRET_KEY","cancelToken","CancelToken","c","then","res","page","catch","e","isCancel"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,UAAxB,EAAoC;AAAA;;AACjD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMc,GAAG,GAAGV,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAGC,UAAH,CAAhB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,QAAIM,MAAJ;AACAd,IAAAA,KAAK,CACFe,GADH,CACOF,GADP,EACY;AACRG,MAAAA,OAAO,EAAE;AACP,sBAAcf,GAAG,CAACgB;AADX,OADD;AAIRC,MAAAA,WAAW,EAAE,IAAIlB,KAAK,CAACmB,WAAV,CAAuBC,CAAD,IAAQN,MAAM,GAAGM,CAAvC;AAJL,KADZ,EAOGC,IAPH,CAOSC,GAAD,IAAS;AAAA;;AACbZ,MAAAA,OAAO,cAACY,GAAG,CAACb,IAAL,8CAAC,UAAUc,IAAX,CAAP;AACAX,MAAAA,UAAU,CACRU,GAAG,CAACb,IAAJ,CAASc,IAAT,CAAc,qBAAd,MACED,GAAG,CAACb,IAAJ,CAASc,IAAT,CAAc,oBAAd,CAFM,CAAV;AAIAjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdH,EAeGkB,KAfH,CAeUC,CAAD,IAAO;AACZ,UAAIzB,KAAK,CAAC0B,QAAN,CAAeD,CAAf,CAAJ,EAAuB;AACvBnB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAnBH;AAoBA,WAAO,MAAMM,MAAM,EAAnB;AACD,GAzBQ,EAyBN,CAACX,IAAD,EAAOC,UAAP,CAzBM,CAAT;AA2BA,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBE,IAAAA,IAAlB;AAAwBE,IAAAA;AAAxB,GAAP;AACD;;GAnCuBT,Q","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../utils/constant\";\r\nexport default function useFetch(path, pageNumber) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const url = path?.[pageNumber];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    let cancel;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"secret-key\": API.SECRET_KEY,\r\n        },\r\n        cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n      })\r\n      .then((res) => {\r\n        setData(res.data?.page);\r\n        setHasMore(\r\n          res.data.page[\"page-size-requested\"] ===\r\n            res.data.page[\"page-size-returned\"]\r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n    return () => cancel();\r\n  }, [path, pageNumber]);\r\n\r\n  return { loading, error, data, hasMore };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}